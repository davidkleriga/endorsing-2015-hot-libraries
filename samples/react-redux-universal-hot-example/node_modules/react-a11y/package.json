{
  "name": "react-a11y",
  "version": "0.2.6",
  "description": "Warns about potential accessibility issues with your React elements.",
  "main": "./dist/index.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/rackt/react-a11y.git"
  },
  "homepage": "https://github.com/rackt/react-a11y/blob/latest/README.md",
  "bugs": {
    "url": "https://github.com/rackt/react-a11y/issues"
  },
  "scripts": {
    "test": "jsxhint . && karma start --single-run",
    "watch-tests": "npm test -- --watch",
    "prepublish": "babel --optional runtime lib --out-dir dist",
    "release": "release"
  },
  "authors": [
    "Ryan Florence",
    "Todd Kloots",
    "Angus Croll"
  ],
  "license": "MIT",
  "devDependencies": {
    "babel": "^5.2.17",
    "babel-core": "^5.2.17",
    "babel-loader": "^5.0.0",
    "babel-runtime": "^5.1.11",
    "jsx-loader": "^0.12.2",
    "jsxhint": "^0.8.1",
    "karma": "^0.12.28",
    "karma-chrome-launcher": "^0.1.7",
    "karma-cli": "0.0.4",
    "karma-firefox-launcher": "^0.1.3",
    "karma-mocha": "^0.1.10",
    "karma-sourcemap-loader": "^0.3.2",
    "karma-webpack": "^1.3.1",
    "mocha": "^2.0.1",
    "react": "^0.12 || ^0.13",
    "rf-release": "0.4.0",
    "webpack": "^1.4.13"
  },
  "tags": [
    "accessibility",
    "react",
    "a11y"
  ],
  "keywords": [
    "accessibility",
    "react",
    "a11y"
  ],
  "readme": "React A11y\n==========\n\n[![build status](https://img.shields.io/travis/rackt/react-a11y/master.svg?style=flat-square)](https://travis-ci.org/rackt/react-a11y)\n\nWarns about potential accessibility issues with your React elements.\n\n![screenshot](http://i.imgur.com/naQTETB.png)\n\nWIP\n---\n\nThis is a WIP, feel free to explore, open issues, and suggest assertions :)\n\nInstallation\n------------\n\n`npm install react-a11y`\n\nUsage\n-----\n\nIn your main application file, require and call the module, you'll start\ngetting warnings in the console as your app renders.\n\n```js\nvar a11y = require('react-a11y');\nif (ENV === 'development') a11y(React);\n```\n\nYou probably don't want to call it if you're in production, and better\nyet, alias the module to nothing with webpack in production.\n\nIf you want it to throw errors instead of just warnings:\n\n```\na11y(React, { throw: true });\n```\n\nYou can filter failures by passing a function to the `filterFn` option. The\nfilter function will receive three arguments: the name of the Component\ninstance or ReactElement, the id of the element, and the failure message.\nNote: If a ReactElement, the name will be the node type followed by the id\n(e.g. div#foo).\n\n```\nvar commentListFailures = (name, id, msg) => {\n  return name === \"CommentList\";\n};\n\na11y(React, { filterFn: commentListFailures });\n```\n\nIf you want to log DOM element references for easy lookups in the DOM inspector,\nuse the `includeSrcNode` option.\n\n```\na11y(React, { throw: true, includeSrcNode: true });\n```\n\nSome test are only relevant for certain device types. For example,\nif you are building a mobile web app, you can filter out\ndesktop-specific rules by specifying a specific device type:\n\n```\na11y(React, { device: ['mobile'] });\n```\n\nIt's also possible exclude certain tests:\n\n```\na11y(React, { exclude: ['REDUNDANT_ALT'] });\n```",
  "readmeFilename": "README.md",
  "_id": "react-a11y@0.2.6",
  "_shasum": "c0d498e32d4efbbb622c5a8ff097a713c5146d73",
  "_from": "react-a11y@0.2.6",
  "_resolved": "https://registry.npmjs.org/react-a11y/-/react-a11y-0.2.6.tgz"
}
