{
  "name": "react-document-meta",
  "version": "1.0.1",
  "description": "Declarative, nested and stateful HTML document meta tags for React",
  "main": "./dist/index",
  "scripts": {
    "test": "make test"
  },
  "keywords": [
    "react",
    "meta",
    "html",
    "document",
    "tags",
    "react-component"
  ],
  "peerDependencies": {
    "react": ">= 0.13.0"
  },
  "devDependencies": {
    "babel": "^5.8.23",
    "babel-core": "^5.8.23",
    "babel-eslint": "^4.1.1",
    "babel-loader": "^5.3.2",
    "eslint": "^1.3.1",
    "eslint-plugin-react": "^3.3.1",
    "jsdom": "^6.3.0",
    "mocha": "^2.3.0",
    "react": "^0.13.0",
    "react-hot-loader": "^1.3.0",
    "webpack": "^1.12.1",
    "webpack-dev-server": "^1.10.1"
  },
  "dependencies": {
    "react-side-effect": "^1.0.1"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/kodyl/react-document-meta"
  },
  "author": {
    "name": "Daniel Juhl"
  },
  "license": "MIT",
  "readme": "React Document Meta [![Build Status](https://travis-ci.org/kodyl/react-document-meta.svg)](https://travis-ci.org/kodyl/react-document-meta) [![npm version](https://badge.fury.io/js/react-document-meta.svg)](http://badge.fury.io/js/react-document-meta)\n===================\n\nHTML meta tags for React-based apps. Works for both client- and server-side rendering, and has a strict but flexible API.\n\nBuilt with [React Side Effect](https://github.com/gaearon/react-side-effect)\n\n___________________\n\n\nInstallation\n-------------------\n```\nnpm install --save react-document-meta\n```\n\nNote: React Side Effect requires React 0.13+ - and so does React Document Meta.\n\n\nUpgrading from 0.1.x to 1.x\n-------------------\n\nAs React Side Effect has been upgraded there is a few breaking changes, which is found in the [changelog](CHANGELOG.md).\n\n\nFeatures\n-------------------\n- Supports extending and nesting on any number of levels\n- Ability to auto generate some meta tags for open graph, twitter, and more\n\nUsage\n-------------------\nSee `example` folder for a working sample.\n\n```javascript\nimport React from 'react';\nimport DocumentMeta from 'react-document-meta';\n\nclass Example extends React.Component {\n  render() {\n    const metaData = {\n      title: 'Some Meta Title',\n      description: 'I am a description, and I can create multiple tags',\n      canonical: 'http://example.com/path/to/page',\n      meta: {\n        charset: 'utf-8',\n        name: {\n          keywords: 'react,meta,document,html,tags'\n        }\n      }\n    };\n\n    return (\n      <div>\n        <DocumentMeta {...metaData} />\n        <h1>Hello World!</h1>\n      </div>\n    );\n  }\n}\n\nReact.render(<Example />, document.getElementById('root'));\n```\n\n### Nesting\nIn most real world use cases, you would like to set some defaults and modify, replace or add just some of the meta tags. `react-document-meta` always use the deepest data set, but you can add an `extend` attribute (`<DocumentMeta {...metaData} extend />`), to instruct the component to merge with the meta data specified one level up. You can add the `extend` attribute to as many `DocumentMeta` components you would like, but the chain needs to be complete.\n\n### Automatic Meta Tags\n`react-document-meta` has the ability to generate meta tags based on the already provided meta data. Currently only open graph title, description and url is supported, which uses the data from `title`, `description` and `canonical`, and only in the case where the values has not been explicit set for `og:title`, `og:description` or `og:url` respectively.\n\n\nServer Usage\n-------------------\nWhen using `react-document-meta` in a project with server-side rendering, you would like to have the final meta data chunk available in your HTML output. You can achieve this by calling `DocumentMeta.rewind()`.\n\nInstead of getting a plain object, you can have the module return the meta as either React components or a HTML string. This is achieved by calling `DocumentMeta.renderAsReact()` or `DocumentMeta.renderAsHTML()`.\n\n\nTODO:\n-------------------\n- [ ] Test coverage\n- [ ] Create full documentation\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/kodyl/react-document-meta/issues"
  },
  "homepage": "https://github.com/kodyl/react-document-meta",
  "_id": "react-document-meta@1.0.1",
  "_shasum": "879a48c820283873b2490cb2c83088703f231985",
  "_from": "react-document-meta@^1.0.0",
  "_resolved": "https://registry.npmjs.org/react-document-meta/-/react-document-meta-1.0.1.tgz"
}
